exports=async function(url,bid,cid,options){const{send}=require("http"),absoluteUrl=require("utils/absolute_url"),clientOptions={...(options&&options.clientOptions),encoding:"utf-8","x-mobile":1};let html,response=await send(url,clientOptions);if(512===response.statusCode&&-1!==response.body.indexOf("jsCaptchaVerify")){const webviewFetch=require("webview_fetch");html=await webviewFetch(url,{mobile:1===clientOptions["x-mobile"],anti:"jsCaptchaVerify"});}else assertOK(response),html=response.body;const{chapterImages,chapterPath,pageImage}=html.subRegexMap(/var chapterImages = (?<chapterImages>\[[^\]]+\]);var chapterPath = "(?<chapterPath>[^"]*)";[\S\s]+?;var pageImage = "(?<pageImage>[^"]*)"/);let base=pageImage||"https://images.wszwhg.net";const p=base.indexOf("/",12);-1!==p&&(base=base.substring(0,p));const urls=JSON.parse(chapterImages).map(_=>absoluteUrl(chapterPath+_,base));return {urls,headers:{Referer:url}}};