async function paginatedComic(url,bid,cid,options){const{send}=require("http"),absoluteUrl=require("utils/absolute_url"),clientOptions={...(options&&options.clientOptions),encoding:"utf-8","x-mobile":0};stat("request");let response=await send(url,clientOptions);stat("request"),assertOK(response);let html=response.body;const img=html.subRegex(/<img src="(?<img>[^"]+)"/);return {paginate:{totalPages:parseInt(html.subRegex(/>(\d+)<\/option>\s*<\/select>/))},urls:[absoluteUrl(img,url)]}}async function linkPaginatedComic(url,bid,cid,options){const{send}=require("http"),absoluteUrl=require("utils/absolute_url"),clientOptions={...(options&&options.clientOptions),encoding:"utf-8","x-mobile":0};stat("request");let response=await send(url,clientOptions);stat("request"),assertOK(response);let html=response.body;const img=html.subRegex(/<img src="(?<img>[^"]+)"/);return {paginate:{type:"link",pageUrl:url,prevPageUrl:absoluteUrl(html.subRegex(/href="([^"]+)">上一页/),url),nextPageUrl:absoluteUrl(html.subRegex(/href="([^"]+)">下一页/),url)},urls:[absoluteUrl(img,url)]}}exports=async function(url,bid,cid,options){return "2_paginated"===bid?linkPaginatedComic(url,bid,cid,options):paginatedComic(url,bid,cid,options)};