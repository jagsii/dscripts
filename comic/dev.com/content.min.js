async function paginatedComic(a,b,c,d){const{send:e}=require("http"),f=require("utils/absolute_url"),g={...(d&&d.clientOptions),encoding:"utf-8","x-mobile":0};stat("request");let h=await e(a,g);stat("request"),assertOK(h);let i=h.body;const j=i.subRegex(/<img src="(?<img>[^"]+)"/);return {paginate:{totalPages:parseInt(i.subRegex(/>(\d+)<\/option>\s*<\/select>/))},urls:[f(j,a)]}}async function linkPaginatedComic(a,b,c,d){const{send:e}=require("http"),f=require("utils/absolute_url"),g={...(d&&d.clientOptions),encoding:"utf-8","x-mobile":0};stat("request");let h=await e(a,g);stat("request"),assertOK(h);let i=h.body;const j=i.subRegex(/<img src="(?<img>[^"]+)"/);return {paginate:{type:"link",pageUrl:a,prevPageUrl:f(i.subRegex(/href="([^"]+)">上一页/),a),nextPageUrl:f(i.subRegex(/href="([^"]+)">下一页/),a)},urls:[f(j,a)]}}exports=async function(a,b,c,d){return "2_paginated"===b?linkPaginatedComic(a,b,c,d):paginatedComic(a,b,c,d)};