exports=async function(url,bid,cid,options){const clientOptions={...(options&&options.clientOptions),encoding:"utf-8","x-mobile":1};stat("request");const{send}=require("http");let response=await send(url,clientOptions);stat("request"),assertOK(response);let html=response.body;const{now,pn,nextPage}=html.subRegexMap(/var now="(?<now>[^"]+)";[^<>]*?var pn="(?<pn>[^"]*)";[^<>]*?var nextPage="(?<nextPage>[^"]*)";/),absoluteUrl=require("utils/absolute_url");let iframeUrl=absoluteUrl(`/js/player/${pn}.html`,url);if(!iframeUrl)return null;response=await send({url:iframeUrl,headers:{Referer:url}},clientOptions),assertOK(response),html=response.body;let u=html.subRegex(/<iframe[^>]* runat="server" src="([^"]+)"/);if(!u)return null;const parentVariables={"parent.now":now,"parent.pn":pn,"parent.nextPage":nextPage};u=u.replace(/'\s*\+([^'+]+)\+\s*'/g,(s,m)=>parentVariables[m.trim()]),response=await send({url:absoluteUrl(u,iframeUrl),headers:{Referer:iframeUrl}},clientOptions),assertOK(response),html=response.body;const audioUrl=html.subRegex(/jPlayer\("setMedia",\s*{mp3:"([^"]+)/);return audioUrl?{url:encodeURI(audioUrl)}:null};