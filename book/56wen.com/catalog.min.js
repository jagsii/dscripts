exports=async function(bid,options){const{send}=require("http"),absoluteUrl=require("utils/absolute_url"),{parseCatalog}=await require("transcode/parse_catalog"),url=`http://www.56wen.com/txt/${bid}.html`;return parseCatalog(url,{recordRegex:/<a href="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>/g},{clientOptions:{...(options&&options.clientOptions),"x-mobile":0},transformer:async html=>{let destUrl=/<a class="btnHook btn_B" href="([^"]+)" target="_blank"\s*>查看目录<\/a>/.exec(html)[1];destUrl=absoluteUrl(destUrl,url),stat("request");const response=await send(destUrl,{encoding:"utf-8"});if(stat("request"),200!=response.statusCode)throw new Error(response.reasonPhrase);let destHtml=response.body,fragmentMatch=/<ul class="catalog_list[^"]*">((?:\s*<li>\s*<a[^>]*>[^<]*<\/a>\s*<\/li>\s*)+)/.exec(destHtml);return null==fragmentMatch?/<ul class="tlist">((?:\s*<li>\s*<a[^>]*>[^<]*<\/a>\s*<\/li>\s*)+)/.exec(html)[1]:fragmentMatch[1]}}).then(_=>(_.forEach(__=>__.name=__.name.substring(__.name.indexOf("_")+1).trim()),_))};