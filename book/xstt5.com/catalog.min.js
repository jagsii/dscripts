exports=async function(bid,options){const{parseCatalog,cleanCatalogWrapper}=await require("transcode/parse_catalog"),url=`https://www.xstt5.com/${bid}/`,URL=require("url"),uri=new URL(url);return parseCatalog(url,null,{clientOptions:{...(options&&options.clientOptions)},parser:async html=>{const fragment=cleanCatalogWrapper(html,/id="chapterList[^>]+>/,"</div>"),result=[];for(let f of fragment.split("</table>")){if(-1===f.indexOf("<table"))continue;const volume=f.subRegex(/<strong>(?<volume>[^<]+)</),chaptersList=[];for(let u of f.split("</ul>")){const list=u.subRegexMapAll(/href="(?<url>[^"]*\d+\.html)"[^>]*>(?<name>[^<]+)</g);0<list.length&&chaptersList.push(list);}for(let i=0;i<chaptersList.length;i++){const list=chaptersList[i],groups=chaptersList.length;for(let j=0;j<list.length;j++)list[j].volume=volume,list[j].order=j*groups+i;}result.push(...chaptersList.flat().sort((a,b)=>a.order-b.order).map(_=>(delete _.order,_.id=_.url.subRegex(/(\d+)\.html/),_.url=uri.resolve(_.url),_)));}return result}})};