exports=async function(url,bid,cid,options){const{parseContent}=await require("transcode/parse_content"),{send}=require("http"),clientOptions={encoding:"utf-8",...(options&&options.clientOptions)};stat("request");let response=await send({url},clientOptions);stat("request"),assertOK(response);let html=response.body,ajaxUrl=html.subRegex(/function ajaxGetContent\(chapid\) {\s*\$\.get\("([^,]+)",/);if(!ajaxUrl)return null;const headers={referer:url,"x-requested-with":"XMLHttpRequest"};let cookie=response.headers["set-cookie"];cookie&&(headers.cookie=cookie.split(";")[0].trim()),ajaxUrl=ajaxUrl.replace("\"+chapid+\"",cid);const absoluteUrl=require("utils/absolute_url");return ajaxUrl=absoluteUrl(ajaxUrl,url),parseContent(ajaxUrl,/(?<fragment>(?:\s*<p>[^<]+<\/p>)+)/,{clientOptions,httpOptions:{headers},preprocess:raw=>raw.replace(/<[^p][a-z]*[^>]*>[^<]*<\/[^p][a-z]*>/g,"")})};