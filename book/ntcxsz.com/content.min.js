exports=async function(url,bid,cid,options){const{collectLines,breakPunchMerger,isBreakPunch}=await require("transcode/parse_content"),URL=require("url"),{send}=require("http");let response=await send(url,options?.clientOptions);assertOK(response);let html=response.body;const pages=parseInt(html.subRegex(/（\d+\s*\/\s*(\d+)）<\/p>/));if(!pages)return null;const uri=new URL(url),url2=uri.resolve("/api/reader_js.php"),result=[];for(let p=0;p<pages;p++){response=await send({url:url2,method:"POST",body:`articleid=${bid}&chapterid=${cid}&pid=${p+1}`,headers:{"X-Requested-With":"XMLHttpRequest",Referer:url,"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}),assertOK(response);const pageContent=[];collectLines(response.body,pageContent),breakPunchMerger(result,pageContent,isBreakPunch),await delay(1e3);}return formatBookContent(result)};