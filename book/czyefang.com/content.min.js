exports=async function(url,bid,cid,options){const{parseContentPaginate,trimBeforeContent}=await require("transcode/parse_content");return parseContentPaginate(page=>1===page?url:url.replace(".html",`_${page}.html`),null,{clientOptions:{...(options&&options.clientOptions)},hasNextFn:html=>null!=/href="\/book\/[a-zA-Z\d_-]+\/[a-zA-Z\d_-]+_\d+\.html"[^>]*>\s*下一页/.exec(html),parser:html=>{const arrays=atob(html.subRegex(/_ii_rr\('([^']+)'/)).split(",").map(_=>parseInt(_));let fragment=html.substring(html.indexOf("id=\"chapter\""));fragment=fragment.substring(fragment.indexOf(">")+1,fragment.indexOf("</div>")),fragment=fragment.replace(new RegExp(/\[.*?\]/),"");const datas=fragment.split("<br><br>"),lines=[],el=arrays[0];for(let i=1;i<=datas.length;i++){const line=datas[arrays[i]-el]?.trim();line&&lines.push(line);}return lines}})};