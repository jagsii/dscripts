exports=async function(url,bid,cid,options){const{parseContent,trimBeforeContent}=await require("transcode/parse_content"),clientOptions={...(options&&options.clientOptions)};return parseContent(url,null,{clientOptions,parser:async html=>{let fragment=html.substring(html.indexOf("id=\"content\""));fragment=fragment.substring(0,fragment.indexOf("</div></div>")),fragment=fragment.substring(fragment.lastIndexOf("</h2>")+5);const lines=fragment.substring(fragment.indexOf("<div>")+5).split("</div><div>").map(_=>_.replace(/<\w+>[^<]*<\/\w+>/g,"").trim()),{send}=require("http");let response=await send({url:`https://www.hetushu.com/book/${bid}/r${cid}.json`,headers:{referer:url,"x-requested-with":"XMLHttpRequest"}},clientOptions);assertOK(response);const token=response.headers.token,base64Decode=require("crypto/base64/decode"),decode=require("crypto/decode"),a=decode(base64Decode(token),"utf-8").split(/[A-Z]+%/).map(_=>parseInt(_));let b=0;const childNode=[];for(let i=0;i<a.length;i++)5>a[i]?(childNode[a[i]]=lines[i],b++):childNode[a[i]-b]=lines[i];return childNode.filter(_=>0<_.length)}})};