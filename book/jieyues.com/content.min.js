exports=async function(url,bid,cid,options){const{send}=require("http"),{retry}=await require("book/jieyues.com/common"),httpOptions={url},clientOptions={...(options&&options.clientOptions),encoding:"utf-8","x-mobile":1};stat("request");let response=await send(httpOptions,clientOptions);if(stat("request"),200!=response.statusCode)throw new Error(response.reasonPhrase);for(let count=0;!0===(await retry(response,httpOptions,clientOptions,count))&&3>count++;)response=await send(httpOptions,clientOptions);if(200>response.statusCode||299<response.statusCode)throw new Error(`Request failed with statusCode ${response.statusCode}, ${response.reasonPhrase}`);let html=response.body;const absoluteUrl=require("utils/absolute_url");if(response=await send(absoluteUrl(/initTxt\("([^"]+)"/.exec(html)[1],url),clientOptions),200!=response.statusCode)throw new Error(response.reasonPhrase);const replaceMap={"":"_0x0001","":"_0x0002","":"_0x0003","":"_0x0004","":"_0x0005","":"_0x0006","":"_0x0007","":"_0x0008"},txt=/_txt_call\((.+)\);?$/.exec(response.body.trim())[1].replace(/[\u0001\u0002\u0003\u0004\u0005\u0006\u0007\u0008]/g,_=>replaceMap[_]),json=JSON.parse(txt),replace=json.replace;let c=json.content;for(let o in replace)replace.hasOwnProperty(o)&&(c=c.replaceAll(replace[o],o));return formatBookContent(c.split(/\s{2,}|<\/ ?p>/).map(_=>_.replace("<p>","").trim()).filter(_=>0<_.length))};