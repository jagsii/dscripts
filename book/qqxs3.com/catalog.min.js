exports=async function(bid,options){const{parseCatalog,hrefRecordRegex}=await require("transcode/parse_catalog"),url=`http://www.qqxs3.com/txt/${bid}/`,clientOptions={...(options&&options.clientOptions)};return parseCatalog(url,null,{clientOptions,parser:async html=>{const args=html.subRegexMap(/url:\s*'(?<url>[^']+)',\s*data:\s*{\s*'action':\s*'(?<action>[^']+)',\s*'xsid':\s*'(?<xsid>[^']+)'\s*},/);if(!args.xsid)return null;const{send}=require("http"),URL=require("url"),uri=new URL(url),response=await send({url:uri.resolve(args.url),method:"POST",body:`action=${args.action}&xsid=${args.xsid}`,headers:{"X-Requested-With":"XMLHttpRequest",Referer:url,"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}},clientOptions);assertOK(response),html=response.body;const result=[];for(let _ of html.subRegexMapAll(hrefRecordRegex)){const id=_.url.subRegex(/(\d+)\.htm/);id&&(_.id=id,_.name=_.name.trim(),_.url=uri.resolve(_.url),result.push(_));}return result}})};