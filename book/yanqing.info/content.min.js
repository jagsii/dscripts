exports=async function(url,bid,cid,options){const{parseContentPaginate,trimContentFragment}=await require("transcode/parse_content");return parseContentPaginate(page=>1===page?url:url.replace(".html",`_${page}.html`),{cleaner:html=>trimContentFragment(html,/class="txtc"[^>]*>/)},{clientOptions:{...(options&&options.clientOptions),encoding:"gbk"},hasNextFn:html=>{const match=html.subRegexMap(/id="pagelink"[^>]*>本章共<b>\s*(?<total>\d+)\s*<\/b>页\s+当前是第<b>\s*(?<current>\d+)\s*</);return match&&match.total!==match.current},pageCleaner:pageContent=>(0<pageContent.length&&(pageContent.last=pageContent.last.replace(/(?: \.\.\.(?:&nbsp;)* )?［[^］]+］/,"").trim()),pageContent)})};