const breakPunchCodes=[12290,65281,65311,8221];function isBreakPunch(a,b,c){return 46===a&&46===b&&46===c||-1!==breakPunchCodes.indexOf(a)}function noopPageCleaner(a){return a}function repeatMerger(a,b){if(0!==b.length){if(0===a.length)return void b.forEach(b=>a.push(b));a[a.length-1]!==b[0]&&a.push(b[0]);for(let c=1;c<b.length;c++)a.push(b[c]);}}function cleanContent(a){return a.map(a=>a.replace(/[\u200B-\u200F\uFEFF\u0300-\u036f]/g,"")).filter(a=>0<a.length)}function cleanContentAd(a){for(let b=0;b<a.length;b++)if(/(推荐|讲真).+(追[书更]|软件).+\w+\.\w+\.\w+/.test(a[b])){a.splice(b,1);break}return a}function trimBeforeContent(a,b){const c=b instanceof RegExp?b:new RegExp(`(?:id|class)="${b}"[^>]*>`),d=c.exec(a);return d&&(a=a.substring(d.index+d[0].length)),a}function removeTrailingNonContentTags(a){const b=/(?:<br\s*\/?>|<p(?: [^>]*)?>|<\/p>|[^<]+)+/.exec(a);return b?b[0]:a}const paragraphContentRegexFragment="(?<fragment>(?:[^<]+|<br\\s*\\/?>|<p[^>]*>|<\\/p>|<[^\\/a-zA-Z])*)",brContentRegexFragment="(?<fragment>(?:[^<]+|<br\\s*\\/?>|<[^\\/a-zA-Z])*)";function parseWrapperRegex(a){if(null==a)return null;if(a instanceof RegExp)return {pattern:a};if("object"==typeof a)return a;if("div#content"===a)return {cleaner:a=>trimBeforeContent(a,/id="content"[^>]*>/)};if("div.content"===a)return {cleaner:a=>trimBeforeContent(a,/class="content"[^>]*>/)};if("div#BookText"===a)return {cleaner:a=>trimBeforeContent(a,"BookText")};if("div#htmlContent"===a)return {cleaner:a=>trimBeforeContent(a,"htmlContent")};if("div.article-body>p"===a)return {cleaner:a=>trimBeforeContent(a,"article-body")};if("div#chapter_content>p"===a)return {cleaner:a=>trimBeforeContent(a,"chapter_content")};if("#chaptercontent"===a)return {cleaner:a=>trimBeforeContent(a,"chaptercontent")};if("div#txt>p"===a)return {cleaner:a=>trimBeforeContent(a,"txt")};if("#acontent"===a)return {cleaner:a=>trimBeforeContent(a,"acontent")};throw new Error(`unknown ParseContent wrapperRegex ${a}`)}function findNodeNameEnd(a,b){let d=a.charAt(b);if("/"===d&&(b+=1),d=a.charAt(b),!("a"<=d&&"z">=d||"A"<=d&&"Z">=d))return -1;for(let c=b+1;c<a.length;c++)if(d=a.charAt(c),!("a"<=d&&"z">=d||"A"<=d&&"Z">=d||"-"===d||"_"===d))return c;return -1}function collectLines(a,b){a=a.trim();let d,e,f=0;for(d=0;d<a.length;d++)if(e=a.charAt(d),"<"===e){const c=findNodeNameEnd(a,d+1);if(-1===c)continue;if(d>f){const c=a.substring(f,d).trim();0<c.length&&b.push(c);}let e=a.substring(d+("/"===a.charAt(d+1)?2:1),c).toLowerCase();if("br"===e||"p"===e){const b=a.indexOf(">",c);if(-1===b)return;f=b+1,d=b;}else return}if(d>f){const c=a.substring(f,d).trim();0<c.length&&b.push(c);}}function simpleMerger(a,b){for(let d of b)a.push(d);}async function extractFragment(a,b){let c;if(null==b)c=a;else if(c=null==b.pattern?a:b.pattern.exec(a).groups.fragment,null!=b.cleaner){c=b.cleaner(c);const{removeLeadingNonContentTags:a}=await require("transcode/utils");c=a(c),c=removeTrailingNonContentTags(c);}return c}async function parseContent(a,b,c){const d=[];c=c||{};const e={url:a,...c.httpOptions},f={encoding:"utf-8",...c.clientOptions};let g;if(c.webview){const b=require("webview_fetch");g=await b(a,{mobile:1===f["x-mobile"]});}else {const{send:a}=require("http");stat("request");const b=await sendRetry(e,f,c.retry);g=b.body;}if(null!=c.preprocess&&(g=c.preprocess(g)),null!=c.parser)return c.parser(g);g=cleanHTML(g);let h=parseWrapperRegex(b);stat("fragment");let i=await extractFragment(g,h);if(stat("fragment"),null!=c.transformer){stat("transformer");const a=c.transformer(i);i=a instanceof Promise?await a:a,stat("transformer");}return stat("collect"),collectLines(i,d),stat("collect"),cleanContent(d)}async function parseContentPaginate(a,b,c){let d=1;const e=[];let f=!0;const g={encoding:"utf-8",...c.clientOptions};let h=parseWrapperRegex(b),i=c.pageCleaner||noopPageCleaner;do{if(10<d)break;const b=a(d);let j;if(c.webview){const a=require("webview_fetch");j=await a(b,{mobile:1===g["x-mobile"]});}else {const{send:a}=require("http"),d={url:b,...c.httpOptions},e=await sendRetry(d,g,c.retry);j=e.body;}null!=c.preprocess&&(j=c.preprocess(j)),f=c.hasNextFn(j),j=cleanHTML(j);let k;if(void 0===c.merger?k=(a,b,c)=>{if(0===b.length)return;if(0===a.length)return void b.forEach(b=>a.push(b));const d=a[a.length-1].trim(),e=b[0].trim(),f=d.length,g=d.charCodeAt(f-1);c(g,1<f?d.charCodeAt(f-2):null,2<f?d.charCodeAt(f-3):null)?(a[a.length-1]=d,a.push(e)):a[a.length-1]=d+e;for(let d=1;d<b.length;d++)a.push(b[d]);}:c.merger&&(k=c.merger),null!=c.parser){const a=c.parser(j);null==k?i(a instanceof Array?a:a.content).forEach(a=>e.push(a)):k(e,i(a instanceof Array?a:a.content),isBreakPunch);}else {let a=await extractFragment(j,h);if(null!=c.transformer){const b=c.transformer(a);a=b instanceof Promise?await b:b;}if(k){const b=[];collectLines(a,b),k(e,i(b),isBreakPunch);}else collectLines(a,e);0!==c.delay&&(await delay(c.delay||200));}d++;}while(f);return cleanContent(e)}exports.parseContent=parseContent,exports.parseContentPaginate=parseContentPaginate,exports.simpleMerger=simpleMerger,exports.repeatMerger=repeatMerger,exports.cleanContent=cleanContent,exports.cleanContentAd=cleanContentAd,exports.trimBeforeContent=trimBeforeContent,exports.paragraphContentRegexFragment=paragraphContentRegexFragment,exports.brContentRegexFragment=brContentRegexFragment;