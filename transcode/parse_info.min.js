const metaPattern=/meta [^>]*(?:property|name)="og:novel:book_(?:name|title)" content="(?<name>[^"]+)"|meta [^>]*(?:property|name)="og:novel:author" content="(?<author>[^"]+)"|meta [^>]*(?:property|name)="og:novel:status" content="(?<serial>[^"]+)"|meta [^>]*(?:property|name)="og:image" content="(?<cover>[^"]+)"|meta [^>]*(?:property|name)="og:description" content="(?<intro>[^"]+)"/g,strongAIntroPattern=/>简介[:：](?:[^<]*(?:<strong[^>]*>)?<a[^>]*>[^<]*<\/a>(?:<\/strong>)?)*(?<intro>[^<>]+)</,introInfoRegex=/class="intro_info"[^>]*>(?<intro>(?:[^<]+|<br\s*\/?>)+)</;async function parseInfo(a,b,c,d){d=d||{};const e={encoding:"utf-8","x-mobile":1,...d.clientOptions},f=require("utils/absolute_url");let g;if(d.webview){const a=require("webview_fetch");g=await a(b,{mobile:1===e["x-mobile"],...d.webviewOptions});}else {const a={url:b,...d.httpOptions};d.lvt&&(!a.headers&&(a.headers={}),a.headers={cookie:lvtCookie(d.lvt)});const{send:c}=require("http");stat("request");let f=await c(a,e);if(stat("request"),d.onBlocked&&isBlocked(f))return d.onBlocked();if(null!=d.retry&&(f=await handleRequestRetry(f,a,e,c,d.retry)),d.fallbackToWebview&&d.fallbackToWebview(f)){const a=require("webview_fetch");g=await a(b,{mobile:1===e["x-mobile"],...d.webviewOptions});}else assertOK(f),g=f.body;}null!=d.preprocess&&(g=await d.preprocess(g));const h={url:b,originName:a,name:"",author:"",cover:"",serial:0,intro:""};if(d.parser)await d.parser(g,h);else {let a;if("string"!=typeof c)a=c;else if("Synopsis"===c)a=[/<span class="title">(?<name>[^<]*)</,/synopsisArea_detail">[\S\s]+?<img src="(?<cover>[^"]*)"/,/作者：(?:<a[^>]*>)?(?<author>[^<]*)</,/class="author">(?:作者：|<a[^>]*>)+(?<author>[^<]*)</,/状态：(?<serial>[^<]*)</,/class="review">(?<intro>[^<]*)</];else if("block_txt2"===c)a=[/class="block_img2">(?:\s*<script[^>]+>[^<]*<\/script>)?\s*<img [^>]*src="(?<cover>[^"]*)"/,/<div class="block_txt2">\s*(?:<p[^>]*>)?\s*(?:<a[^>]*>)?\s*<h[12]>\s*(?:<a[^>]*>)?(?<name>[^<]+)</,/<p>(?:作|亻乍)者：(?:<a[^>]*>)?(?<author>[^<]*)/,/<p>状态：(?<serial>[^<]*)<\/p>/,introInfoRegex];else if("meta"===c)a=metaPattern;else if("dd_box"===c)a=/<div class="cover">\s*<img src="(?<cover>[^"]*)"[\S\s]+?<dt class="name">(?<name>[^<]+)<\/dt>\s*<dd class="dd_box">\s*<span>作者：(?<author>[^<]+)<[\S\s]+?<dd class="dd_box">\s*<span>状态：(?<serial>[^<]*)<[\S\s]+?<dt>(?:内容|手机)简介<\/dt>\s*<dd>(?<intro>[^<]*)/;else if("xsfm"===c)a=[/class="xsfm"[^>]*>\s*<img [^>]*src="(?<cover>[^"]*)"[^>]*>\s*<\/div>\s*<div class="xx">\s*<ul>\s*<li>(?<name>[^<]+)<\/li>\s*<li>分类：(?:<a[^>]*>)?[^<]*(?:<\/a>)?\s*<\/li>\s*<li>作者：(?:<a[^>]*>)?(?<author>[^<]*)</,/class="jianjie[^>]+>(?<intro>(?:[^<]|<br\s*\/?>|<\/?p>)+)</];else if("infotype"===c)a=[/<h[31]>(?:\s*<a[^>]+>)?(?<name>[^<]+)</,/class="infotype">\s*<p>作者：(?:<a[^>]*>)?(?<author>[^<]+)</,/class="pic">\s*<img [^>]*src="(?<cover>[^"]+)"/,/class="intro">(?:\s*<span>本书简介：<\/span>)?(?<intro>(?:\s*<\/?p>|[^<])+)</];else if("panel-body"===c)a=[/h1[^>]*>(?<name>[^<]+)<\/h1>\s*<p class="booktag">\s*<a[^>]+>(?<author>[^<]*)</,/class="img-thumbnail" [^>]*src="(?<cover>[^"]+)"/,/span class="blue">(?<serial>[^<]+)</,/id="bookIntro"[^>]*>(?<intro>(?:[^<]|<br\s*\/?>)+)</];else if(".main>.detail"===c)a=[/class="detail">\s*<img [^>]*src="(?<cover>[^"]*)"[^>]*>\s*<p class="name">\s*(?:<strong>)?(?<name>[^<]+)(?:<\/strong>)?\s*<\/p>\s*<p class="author">作者：<a[^>]+>(?<author>[^<]*)</,/layui-btn-danger">(?<serial>[^<]+)</,/class="intro">(?<intro>(?:[^<]|<br\s*\/?>|<\/?p>)+)</];else throw new Error(`unknown ParseInfo regex ${c}`);const e=d.serialChar||/[完全]/;if(stat("collect"),a instanceof Array){const c={};for(let b of a)Object.assign(c,g.subRegexMap(b));void 0!==c.name&&(h.name=c.name),void 0!==c.author&&(h.author=c.author),void 0!==c.cover&&(h.cover=f(c.cover.trim(),b)),void 0!==c.serial&&(h.serial=("string"==typeof e?-1!==c.serial.indexOf(e):e.test(c.serial))?1:0),void 0!==c.intro&&(h.intro=c.intro);}else if(-1===a.flags.indexOf("g")){stat("match");const c=a.exec(g);if(stat("match"),null==c)return null;void 0!==c.groups.name&&(h.name=c.groups.name),void 0!==c.groups.author&&(h.author=c.groups.author),void 0!==c.groups.cover&&(h.cover=f(c.groups.cover.trim(),b)),void 0!==c.groups.serial&&(h.serial=("string"==typeof e?-1!==c.groups.serial.indexOf(e):e.test(c.groups.serial))?1:0),void 0!==c.groups.intro&&(h.intro=c.groups.intro);}else {stat("matchAll");const b=g.matchAll(a);stat("matchAll");for(let a of b){if(void 0!==a.groups.name){h.name=a.groups.name;continue}if(void 0!==a.groups.author){h.author=a.groups.author;continue}if(void 0!==a.groups.cover){h.cover=a.groups.cover.trim();continue}if(void 0!==a.groups.serial){h.serial=("string"==typeof e?-1!==a.groups.serial.indexOf(e):e.test(a.groups.serial))?1:0;continue}void 0!==a.groups.intro&&(h.intro=a.groups.intro);}}if(null!=d.introRegex){stat("intro");let a=".intro>p"===d.introRegex?/<div class="intro">\s*<p>(?<intro>(?:[^<]+|<br\s*\/>)+)</:".intro_info"===d.introRegex?introInfoRegex:d.introRegex;const b=a.exec(g);null!=b&&(h.intro=b.groups.intro),stat("intro");}h.intro=h.intro.replace(/<\/[pP]>|<[bB][rR]\s*\/?>/g,"\n").replace(/<[pP][^>]*>/g,"");}return h.cover&&(h.cover=f(h.cover,b)),stat("collect"),null!=d.postprocess&&d.postprocess(g,h),h}exports.metaPattern=metaPattern,exports.strongAIntroPattern=strongAIntroPattern,exports.parseInfo=parseInfo;