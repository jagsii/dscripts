async function parseInfo(a,b,c,d){d=d||{};const e={url:b,...d.httpOptions},f={encoding:"utf-8","x-mobile":1,...d.clientOptions},g=require("utils/absolute_url");let h;if(d.webview){const a=require("webview_fetch");h=await a(b,{mobile:1===f["x-mobile"]});}else {const a=await sendRetry(e,f,d.retry);h=a.body;}null!=d.preprocess&&(h=d.preprocess(h));const i={url:b,originName:a,name:"",author:"",cover:"",serial:0,intro:""};if(d.parser)await d.parser(h,i);else {let a;if("string"!=typeof c)a=c;else if("Synopsis"===c)a=/<span class="title">(?<name>[^<]*)<[\S\s]*<div class="synopsisArea_detail">(?:\s*<div id="bookdetail">\s*<div id="thumb">)?\s*<img src="(?<cover>[^"]*)"[\S\s]*<(?:p|li) class="author">(?:作者：|<a[^>]*>)+(?<author>[^<]*)<[\S\s]*状态：(?<serial>[^<]*)<\/[\S\s]*<p class="review">(?<intro>[^<]*)<\/p>/;else if("block_txt2"===c)a=[/class="block_img2">\s*<img [^>]*src="(?<cover>[^"]*)"/,/<div class="block_txt2">\s*<p>\s*(?:<a[^>]*>)?\s*<h[12]>(?<name>[^<]+)(?:<a id="translatelink"[^>]*>\s*<font[^>]*>[^<]*<\/font>\s*<\/a>)?(?:\s*<\/?[a-zP12]+>)+\s*<p>作者：(?:<a[^>]*>)?(?<author>[^<]*)/,/<p>状态：(?<serial>[^<]*)<\/p>/,/<div class="intro_info"[^>]*>(?<intro>(?:[^<]+|<br ?\/?>)*)</];else if("meta"===c)a=/meta (?:property|name)="og:novel:book_name" content="(?<name>[^"]+)"|meta (?:property|name)="og:novel:author" content="(?<author>[^"]+)"|meta property="og:novel:status" content="(?<serial>[^"]+)"|meta property="og:image" content="(?<cover>[^"]+)"|meta property="og:description" content="(?<intro>[^"]+)"/g;else if("dd_box"===c)a=/<div class="cover">\s*<img src="(?<cover>[^"]*)"[\S\s]+?<dt class="name">(?<name>[^<]+)<\/dt>\s*<dd class="dd_box">\s*<span>作者：(?<author>[^<]+)<[\S\s]+?<dd class="dd_box">\s*<span>状态：(?<serial>[^<]*)<[\S\s]+?<dt>(?:内容|手机)简介<\/dt>\s*<dd>(?<intro>[^<]*)/;else throw new Error(`unknown ParseInfo regex ${c}`);const e=d.serialChar||/[完全]/;if(stat("collect"),a instanceof Array){const c={};for(let b of a)Object.assign(c,h.subRegexMap(b));void 0!==c.name&&(i.name=c.name),void 0!==c.author&&(i.author=c.author),void 0!==c.cover&&(i.cover=g(c.cover.trim(),b)),void 0!==c.serial&&(i.serial=("string"==typeof e?-1!==c.serial.indexOf(e):e.test(c.serial))?1:0),void 0!==c.intro&&(i.intro=c.intro);}else if(-1===a.flags.indexOf("g")){stat("match");const c=a.exec(h);if(stat("match"),null==c)return null;void 0!==c.groups.name&&(i.name=c.groups.name),void 0!==c.groups.author&&(i.author=c.groups.author),void 0!==c.groups.cover&&(i.cover=g(c.groups.cover.trim(),b)),void 0!==c.groups.serial&&(i.serial=("string"==typeof e?-1!==c.groups.serial.indexOf(e):e.test(c.groups.serial))?1:0),void 0!==c.groups.intro&&(i.intro=c.groups.intro);}else {stat("matchAll");const b=h.matchAll(a);stat("matchAll");for(let a of b){if(void 0!==a.groups.name){i.name=a.groups.name;continue}if(void 0!==a.groups.author){i.author=a.groups.author;continue}if(void 0!==a.groups.cover){i.cover=a.groups.cover.trim();continue}if(void 0!==a.groups.serial){i.serial=("string"==typeof e?-1!==a.groups.serial.indexOf(e):e.test(a.groups.serial))?1:0;continue}void 0!==a.groups.intro&&(i.intro=a.groups.intro);}}if(null!=d.introRegex){stat("intro");let a=".intro>p"===d.introRegex?/<div class="intro">\s*<p>(?<intro>(?:[^<]+|<br\s*\/>)+)</:".intro_info"===d.introRegex?/<div class="intro_info">(?<intro>(?:[^<]+|<br\s*\/>)+)</:d.introRegex;const b=a.exec(h);null!=b&&(i.intro=b.groups.intro),stat("intro");}-1!==i.intro.indexOf("<p>")&&(i.intro=i.intro.replace(/<\/p>/g,"\n").replace(/<p>/g,""));}return i.cover&&(i.cover=g(i.cover,b)),stat("collect"),null!=d.postprocess&&d.postprocess(h,i),i}exports.parseInfo=parseInfo;