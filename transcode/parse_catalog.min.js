const{send}=require("http"),webviewFetch=require("webview_fetch"),absoluteUrl=require("utils/absolute_url");function cleanNewest(a){var b=Math.min;if(0===a.length)return a;let c=-1;const d=b(17,a.length);if(!a.first.volume){for(let b=0;b<d;b++)if(a[b].id!==a[a.length-1-b].id){c=b;break}}else for(let b=0;b<d;b++)if(a[b].volume&&-1===a[b].volume.indexOf("\u6700\u65B0\u7AE0\u8282")){c=b;break}return 0<c&&a.splice(0,c),a}function parseRegex(a){if(a instanceof Array){let b=a[1];-1===b.flags.indexOf("g")&&(b=RegExp(b,"g"));const c=[a[0],b];return 2<a.length&&c.push(a[2]),c}if("div.mulu+dl>(dt,dd)"===a)return [/<div class="mulu"[^>]*>(?:<script>[^<]*<\/script>)?<\/div>\s*<dl[^>]*>\s*(?<fragment>(?:\s*<dt>[^<]*<\/dt>\s*|\s*<dd>\s*<a href="[^"]+">[^<]+<\/a>\s*<\/dd>\s*)*)\s*<\/dl>/,/<dt>(?<volume>[^<]+)<\/dt>|<dd>\s*<a href="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>\s*<\/dd>/g];if("div#list>dl>(dt,dd)"===a)return [/<div (?:id|class)="list"[^>]*>\s*<dl>\s*(?<fragment>(?:\s*<dt[^>]*>(?:\s*(?:<b>)?[^<]+<\/b>)?[^<]*<\/dt>\s*|\s*<dd>\s*(?:<a[^>]*>[^<]+<\/a>)?\s*<\/dd>\s*|\s*<(?:div|center) class="clear">[\S\s]*?<\/(?:div|center)>\s*)*)\s*<\/dl>/,/<dt[^>]*>(?:\s*(?:<b>)?[^<]+<\/b>)?(?<volume>[^<]+)<\/dt>|<dd>\s*<a[^>]* href\s*="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>\s*<\/dd>/g];if("listmain>dl>dd"===a)return [/<div (?:id|class)="listmain"[^>]*>\s*<dl>\s*(?<fragment>(?:\s*<dt>[^<]*<\/dt>\s*|\s*<dd>\s*(?:<a[^>]*>[^<]+<\/a>)?\s*<\/dd>\s*)*)\s*<\/dl>/,/<dd>\s*<a href\s*="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>\s*<\/dd>/g];if("listmain>dl>(dt,dd)"===a)return [/<div (?:id|class)="listmain"[^>]*>\s*<dl>\s*(?<fragment>(?:\s*<dt>[^<]*<\/dt>\s*|\s*<dd>\s*(?:<a[^>]*>[^<]+<\/a>)?\s*<\/dd>\s*)*)\s*<\/dl>/,/<dt[^>]*>《[^》]*》(?<volume>[^<]+)<\/dt>|<dd>\s*<a[^>]* href\s*="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>\s*<\/dd>/g];if("div#list>dl>(dt>b,dd)"===a)return [/<div id="list"[^>]*>\s*<dl>\s*(?<fragment>(?:\s*<dt>\s*(<b>[^<]+<\/b>\s*(?:<a[^>]*>[^<]+<\/a>)?|[^<]+)\s*<\/dt>\s*|\s*<dd>\s*(<a[^>]*>[^<]+<\/a>)?\s*<\/dd>\s*)+)\s*/,/(?<since><dt>\s*<b>(?:《[^》]+》)?\s*(?<volume>[^<]+)<\/b>)|<dd>\s*<a href\s*="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)<\/a>\s*<\/dd>/g];if("div#list>dl>dd"===a)return [/<div[^>]*(?:id|class)="list"[^>]*>\s*<dl[^>]*>(?:[\S\s]*?\s*<dt>\s*(?:<b>)?[^<]*(?:<\/b>)?<\/dt>)?(?<fragment>(?:\s*<dd>\s*(?:<a[^>]*>[^<]*<\/a>\s*)?<\/dd>)*)\s*<\/dl>/,/<dd>\s*(?:<a[^>]* href="(?<url>[^"]*)"[^>]*>(?<name>[^<]*)<\/a>)?\s*<\/dd>/g];if("div#list>dl>dd@last"===a)return [{pattern:/<div[^>]*(?:id|class)="list"[^>]*>\s*<dl[^>]*>(?:[\S\s]*?\s*<dt>\s*(?:<b>)?[^<]*(?:<\/b>)?<\/dt>)?(?<fragment>(?:\s*<dd>\s*<a[^>]*>[^<]*<\/a>\s*<\/dd>)*)\s*<\/dl>/g,index:-1},/<dd>\s*(?:<a[^>]* href="(?<url>[^"]*)"[^>]*>(?<name>[^<]*)<\/a>)?\s*<\/dd>/g];if(".section-list"===a)return [{pattern:/<ul [^>]*class="section-list[^"]*"[^>]*>(?<fragment>(?:\s*<li[^>]*>\s*<a[^>]*>[^<]*<\/a>\s*<\/li>\s*)*)/g,index:-1},/<a [^>]*href="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)</g];if("\u4E0B\u62C9\u5F0F\u9605\u8BFB"===a)return [/<ul id="chapter-list-[^>]*>(?<fragment>(?:\s*<li>\s*<a[^>]*>\s*<span>[^<]*<\/span>\s*<\/a>\s*<\/li>)+)/,/href="(?<url>[^"]+\d+\.html)"[^>]*>\s*<span>(?<name>[^<]+)</g];if("jieqi230"===a)return [/<div class="index">\s*(?<fragment>(?:\s*<div class="volume">[^<]*<\/div>|\s*<\/?ul[^>]*>|\s*<li[^>]*>\s*<a[^>]*>[^<]*<\/a>\s*<\/li>)+)/,/volume">\s*(?:[^<\s]+\s)?(?<volume>[^<]+)|href="(?<url>[^"]+)"[^>]*>(?<name>[^<]+)/g];throw new Error(`unknown ParseCatalog regex ${a}`)}async function collect(a,b,c,d){null!=d.preprocess&&(a=d.preprocess(a));const e=null!=d.urlBuilder;let f;if(d.parser)f=await d.parser(a),f.forEach(a=>{a.url=e?d.urlBuilder(a.id):absoluteUrl(a.url,c);});else {stat("parseRegex");const[g,h,i]=parseRegex(b);stat("parseRegex");const j=-1!==h.source.indexOf("?<volume>"),k=d.idRegex||/(?<id>\d+)\.s?html?/;let l,m=-1!==h.source.indexOf("?<skip>"),n=-1!==h.source.indexOf("?<since>");j&&(d.hasOwnProperty("volumeRegex")&&null==d.volumeRegex?l=null:l=d.volumeRegex||/(?:《[^》]*》)?\s*(?<volume>.+)\s*/);let o;if(stat("fragment"),null===g)o=a;else if(g instanceof RegExp)o=g.exec(a).groups.fragment;else {const b=[...a.matchAll(g.pattern)];o=b[0>g.index?b.length+g.index:g.index][1];}if(stat("fragment"),null!=d.transformer){stat("transformer");const a=d.transformer(o);o=a instanceof Promise?await a:a,stat("transformer");}stat("matchAll");const p=o.matchAll(h);stat("matchAll");let q=null;f=[],stat("collect");for(let a of p){if(m){if(null==a.groups.skip)continue;m=!1;continue}if(n){if(null==a.groups.since)continue;n=!1;}if(j&&null!=a.groups.volume){q=a.groups.volume,null!=l&&(q=l.exec(q).groups.volume.trim());continue}if(null!=a.groups.name){const b=k.exec(a.groups.url).groups.id,g={id:b,name:a.groups.name,url:e?d.urlBuilder(b):absoluteUrl(a.groups.url,c)};j&&void 0!==q&&null!==q&&(g.volume=q),f.push(g);}}if(null!=i)return i(f)}return cleanNewest(f),stat("collect"),f}async function parseCatalog(a,b,c){c=c||{};let d;const e={encoding:"utf-8",...c.clientOptions};if(c.webview)d=await webviewFetch(a,{mobile:1===e["x-mobile"]});else {const b={url:a,...c.httpOptions};stat("request");let f=await send(b,e);if(stat("request"),null!=c.retry)for(let a=0;!0===(await c.retry(f,b,e,a))&&3>a++;)f=await send(b,e);if(200>f.statusCode||299<f.statusCode)throw new Error(`Request failed with statusCode ${f.statusCode}, ${f.reasonPhrase}`);d=f.body;}return await collect(d,b,a,c)}async function parseCatalogPaginate(a,b,c){const d=c.pageSize||20,e=null==c.totalPagesOffset?0:c.totalPagesOffset;let f,g=c.page,h=c.chapterIndex;-1===g?(f=!0,g=null):f=!1,null==g&&(null==h?g=1:g=Math.floor(h/d)+1),1>g&&(g=1);let i=a(g);const j={url:i,...c.httpOptions},k={encoding:"utf-8",...c.clientOptions};let l;if(c.webview)l=await webviewFetch(i,{mobile:1===k["x-mobile"]});else {stat("request");let a=await send(j,k);if(stat("request"),null!=c.retry)for(let b=0;!0===(await c.retry(a,j,k,b))&&3>b++;)a=await send(j,k);if(200>a.statusCode||299<a.statusCode)throw new Error(`Request failed with statusCode ${a.statusCode}, ${a.reasonPhrase}`);l=a.body;}const m=c.totalPagesRegex.exec(l),n=m?parseInt(m.groups.totalPages)+e:1;if(f&&n>g||n<g)if(g=n,i=a(g),c.webview)l=await webviewFetch(i,{mobile:1===k["x-mobile"]});else {stat("request");let a=await send({...j,url:i},k);if(stat("request"),200>a.statusCode||299<a.statusCode)throw new Error(`Request failed with statusCode ${a.statusCode}, ${a.reasonPhrase}`);l=a.body;}const o=await collect(l,b,i,c);return {paginate:{pageNo:g,pageSize:d,totalPages:n},catalog:o}}exports.cleanNewest=cleanNewest,exports.parseCatalog=parseCatalog,exports.parseCatalogPaginate=parseCatalogPaginate;