function getNodeHost(path,nodeHosts,sum=256){var a=path.match(/images\/\w\/(.{2})/i),weight=1;null!==a&&a[1]&&(weight=parseInt("0x"+a[1],16));var hosts=nodeHosts,total=0;hosts.forEach(function(item){"string"==typeof item&&(item={weight:1,value:item}),item.value&&(total+=item.weight?item.weight:1);}),total=0<total?total:1;var host=null,w=0;return hosts.forEach(function(item){null===host&&("string"==typeof item&&(item={weight:1,value:item}),item.value&&(w+=(item.weight?item.weight:1)/total*sum,w>weight&&(host=item.value)));}),host}async function parseContent(url,options){options=options||{};const httpOptions={url,...options.httpOptions},clientOptions={encoding:"utf-8",...options.clientOptions};let html;if(options.webview){const webviewFetch=require("webview_fetch");html=await webviewFetch(url,{mobile:1===clientOptions["x-mobile"],...options.webviewOptions});}else {stat("request");const{send}=require("http");let response=await send(httpOptions,clientOptions);if(stat("request"),options.fallbackToWebview&&options.fallbackToWebview(response)){const webviewFetch=require("webview_fetch");html=await webviewFetch(url,{mobile:1===clientOptions["x-mobile"],...options.webviewOptions});}else assertOK(response),html=response.body;}const{chapterImages,nodeHost,nodeHosts}=html.subRegexMap(/var chapterImages\s*=\s*(?<chapterImages>\[[^\]]+\]);[^<]*?var nodeHost\s*=\s*"(?<nodeHost>[^"]*)";[^<]*?var nodeHosts\s*=\s*(?<nodeHosts>\[[^;]*\]);/),{getCih,getCirh}=html.subRegexMap(/function getCih\(\)\{\s*return ["'](?<getCih>[^"']+)["'];\s*\}<\/script>\s*<script>function getCirh\(\)\{return ["'](?<getCirh>[^"']+)["'];/),chapterImageHost=html.subRegex(/var chapterImageHost\s*=\s*"([^"]*)";/),chapterImageRHost=html.subRegex(/var chapterImageRHost\s*=\s*"([^"]*)";/);var host=chapterImageHost?chapterImageHost:"";getCih!==void 0&&(host=getCih);let cirh=chapterImageRHost?chapterImageRHost:"";getCirh!==void 0&&(cirh=getCirh);const hosts=JSON.parse(nodeHosts),urls=JSON.parse(chapterImages.replace(/\\/g,"")).map(_=>cirh&&/^(\/[rz]\/?)/i.test(_)?cirh+_:/^(\/p\/?)/i.test(_)?nodeHost+_:/^\/images\/p\//i.test(_)?getNodeHost(_,hosts)+_:host&&/^(\/|images?)/i.test(_)?host+_:_);return {urls}}exports.getNodeHost=getNodeHost,exports.parseContent=parseContent;