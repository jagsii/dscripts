async function parseCatalog(bid,site,options){const{send}=require("http");options=options||{};const clientOptions={encoding:"utf-8",...options.clientOptions},url=`${site}/files/${bid.idPrefix()}/${bid}/${bid}.json?cdnversions=${Math.ceil(new Date().getTime()/3e5)}`;let html;if(options.webview){const webviewFetch=require("webview_fetch");html=await webviewFetch(url,{mobile:1===clientOptions["x-mobile"],...options.webviewOptions});}else {const httpOptions={url,...options.httpOptions},response=await send(httpOptions,clientOptions);if(200>response.statusCode||299<response.statusCode)throw new Error(`Request failed with statusCode ${response.statusCode}, ${response.reasonPhrase}`);html=response.body;}const json=JSON.parse(html),articleid=json.info.articleid+"",idPrefix=articleid.idPrefix(),ssid=options.ssid||"555";return formatCatalog(json.list.map(_=>({id:_.chapterid+"",name:_.chaptername.trim(),url:`${site}/chapter.html?${bid}#mybookid=${bid}&bookid=${articleid}&chapterid=${_.chapterid}&url=${site}/files/article/html${ssid}/${idPrefix}/${articleid}/${_.chapterid}.html`})))}exports.parseCatalog=parseCatalog;