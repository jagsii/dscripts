exports=async function(a,b){const{parseCatalog:c}=await require("transcode/parse_catalog"),d=`https://www.umiwx.com/book/${3<a.length?a.substring(0,a.length-3):"0"}/${a}/`;return c(d,[/<ul id="newlist">(?<fragment>(?:\s*<div data-id="\d+">(?:\s*<li>\s*<span>\s*<a[^>]*>[^<]*<\/a>\s*<\/span>\s*<\/li>\s*)*<\/div>\s*)*)/,/<li>\s*<span>\s*<a[^>]*href="(?<url>[^"]+)"[^>]*>(?<name>[^<]*)<\/a>\s*<\/span>\s*<\/li>/g],{...b,transformer:function(a){const b=a.matchAll(/<div data-id="(?<id>\d+)">(?<inner>(?:\s*<li>\s*<span>\s*<a[^>]*>[^<]*<\/a>\s*<\/span>\s*<\/li>\s*)*)<\/div>/g),c=[];for(let d of b)c.push([parseInt(d.groups.id),d.groups.inner]);return c.sort((c,a)=>c[0]-a[0]).map(a=>a[1]).join("")}})};