exports=async function(bid,options){const url=`${options.recognizeExtra?options.recognizeExtra:"https://www.555pian.com"}/voddetail/${bid}.html`,clientOptions={...(options&&options.clientOptions),encoding:"utf-8"},{send}=require("http"),URL=require("url");let response=await send(url,clientOptions);assertOK(response);let html=response.body,fragment=/(?<fragment>(?:<div class="module-list[^>]+>\s*<div[^>]*>\s*<div[^>]*>(?:\s*<a[^>]*>\s*<span>[^<]*<\/span>\s*<\/a>)*\s*<\/div>\s*<\/div>\s*<\/div>\s*)+)/.exec(html).groups.fragment,matches=fragment.matchAll(/(?<route>module-play-list-content)|<a [^>]*href="(?<url>[^"]+)"[^>]*>\s*<span>(?<name>[^<]+)/g);const result=[];let index=-1;const base=new URL(url);for(let m of matches){if(m.groups.route){result.push({route:"",name:"",catalog:[]}),index++;continue}result[index].catalog.push({id:m.groups.url.subRegex(/(\d+)\.html/),name:m.groups.name,url:base.resolve(m.groups.url)});}fragment=/id="y-playList">(?<fragment>(?:\s*<div[^>]* data-dropdown-value="(?<name>[^"]+)">\s*<span>[^<]+<\/span>\s*<small>\d+<\/small>\s*<\/div>)+)/.exec(html).groups.fragment,matches=fragment.matchAll(/<span>(?<name>[^<]+)<\/span>/g),index=0;for(let m of matches)result[index].name=m.groups.name,0<result[index].catalog.length&&(result[index].route=result[index].catalog[0].url.subRegex(/(\d+)-\d+\.html/)),index++;return formatCatalog({type:"routed",catalogs:result})};